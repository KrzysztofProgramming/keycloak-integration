{
  "id": "2abf51e6-9e51-4f1b-928f-a19a9f28bcdc",
  "realm": "Testing",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "4f92565d-a133-4fec-b8c9-70f0e6aacfe6",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "2abf51e6-9e51-4f1b-928f-a19a9f28bcdc",
        "attributes": {}
      },
      {
        "id": "e959510b-d8a0-4755-941a-7cdb32d895c6",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "2abf51e6-9e51-4f1b-928f-a19a9f28bcdc",
        "attributes": {}
      },
      {
        "id": "a28bd829-7f10-4327-95a2-be1f874348c7",
        "name": "default-roles-testing",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "manage-account",
              "view-profile"
            ]
          }
        },
        "clientRole": false,
        "containerId": "2abf51e6-9e51-4f1b-928f-a19a9f28bcdc",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "5f15b11a-12f7-4434-9761-624d90a4f48f",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "485f7f03-1c9c-4552-ae4b-f29f1dd9f7a6",
          "attributes": {}
        },
        {
          "id": "f159cc09-ba30-44e8-99b5-ef98c77ecb7e",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "485f7f03-1c9c-4552-ae4b-f29f1dd9f7a6",
          "attributes": {}
        },
        {
          "id": "f790c875-b503-45d0-bc0c-6b062a98f6e6",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "485f7f03-1c9c-4552-ae4b-f29f1dd9f7a6",
          "attributes": {}
        },
        {
          "id": "a1eaf19b-2814-4e66-8b58-a83a343e5f83",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "485f7f03-1c9c-4552-ae4b-f29f1dd9f7a6",
          "attributes": {}
        },
        {
          "id": "cb1cf94b-2fa5-4222-a370-028e12ec0145",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "manage-events",
                "query-clients",
                "query-groups",
                "manage-realm",
                "view-realm",
                "manage-authorization",
                "view-clients",
                "query-realms",
                "impersonation",
                "view-users",
                "create-client",
                "view-events",
                "view-identity-providers",
                "manage-identity-providers",
                "view-authorization",
                "manage-users",
                "manage-clients",
                "query-users"
              ]
            }
          },
          "clientRole": true,
          "containerId": "485f7f03-1c9c-4552-ae4b-f29f1dd9f7a6",
          "attributes": {}
        },
        {
          "id": "a483a16e-8e85-458b-b694-6ad77d9d7070",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "485f7f03-1c9c-4552-ae4b-f29f1dd9f7a6",
          "attributes": {}
        },
        {
          "id": "ab51b5ef-2dd8-43a1-b22d-42f7794a6378",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "485f7f03-1c9c-4552-ae4b-f29f1dd9f7a6",
          "attributes": {}
        },
        {
          "id": "1af1050c-bb27-44be-99cd-5adb7ab5515a",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "485f7f03-1c9c-4552-ae4b-f29f1dd9f7a6",
          "attributes": {}
        },
        {
          "id": "16d24aff-992c-43ca-875f-abbbfe481af3",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "485f7f03-1c9c-4552-ae4b-f29f1dd9f7a6",
          "attributes": {}
        },
        {
          "id": "0474944a-6df9-4bda-bb37-17305df7001c",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "485f7f03-1c9c-4552-ae4b-f29f1dd9f7a6",
          "attributes": {}
        },
        {
          "id": "f323a863-154a-4679-a581-0f0755cad46a",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-groups",
                "query-users"
              ]
            }
          },
          "clientRole": true,
          "containerId": "485f7f03-1c9c-4552-ae4b-f29f1dd9f7a6",
          "attributes": {}
        },
        {
          "id": "1f40d697-ce29-4620-8f66-1a5841604ea6",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "485f7f03-1c9c-4552-ae4b-f29f1dd9f7a6",
          "attributes": {}
        },
        {
          "id": "25c4b1ff-7139-4a22-8123-19db013f0668",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "485f7f03-1c9c-4552-ae4b-f29f1dd9f7a6",
          "attributes": {}
        },
        {
          "id": "d71a5914-db51-4259-8bde-c7fae159ef26",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "485f7f03-1c9c-4552-ae4b-f29f1dd9f7a6",
          "attributes": {}
        },
        {
          "id": "fc61caea-6b8d-4012-97d8-895246704da3",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "485f7f03-1c9c-4552-ae4b-f29f1dd9f7a6",
          "attributes": {}
        },
        {
          "id": "b9bc24fa-801f-413d-9d44-06d5584da060",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "485f7f03-1c9c-4552-ae4b-f29f1dd9f7a6",
          "attributes": {}
        },
        {
          "id": "e2cfb281-ac93-4f25-9ca3-489be85528f4",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "485f7f03-1c9c-4552-ae4b-f29f1dd9f7a6",
          "attributes": {}
        },
        {
          "id": "335e8b9d-4f28-4536-86b5-cadd66bda5f8",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "485f7f03-1c9c-4552-ae4b-f29f1dd9f7a6",
          "attributes": {}
        },
        {
          "id": "c48559e5-4fde-4754-a86d-034d465eda84",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "485f7f03-1c9c-4552-ae4b-f29f1dd9f7a6",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "admin-cli": [],
      "Spring-resources-server": [],
      "account-console": [],
      "broker": [
        {
          "id": "66bc7dfd-266c-41d7-9ce0-3ad823017d5b",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "e4d088b2-15c3-4118-a3d0-4ddd3cbc1bfd",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "6dc3847b-cea3-484a-af1d-0ccc35e22557",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "218f368e-1ef4-44e1-ba30-5e2af1baeca5",
          "attributes": {}
        },
        {
          "id": "c0c313da-e1b4-4f06-9072-f9af15b68a20",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "218f368e-1ef4-44e1-ba30-5e2af1baeca5",
          "attributes": {}
        },
        {
          "id": "e65851b6-cbe6-417e-8258-90e0a01fa608",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "218f368e-1ef4-44e1-ba30-5e2af1baeca5",
          "attributes": {}
        },
        {
          "id": "5b677d56-e30e-4e0b-bd9b-94d2312458bc",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "218f368e-1ef4-44e1-ba30-5e2af1baeca5",
          "attributes": {}
        },
        {
          "id": "952e98f6-cc5e-4ecd-9c6b-88e1d0be001d",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "218f368e-1ef4-44e1-ba30-5e2af1baeca5",
          "attributes": {}
        },
        {
          "id": "c8d609aa-4e41-440c-956e-e5eb25faea25",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "218f368e-1ef4-44e1-ba30-5e2af1baeca5",
          "attributes": {}
        },
        {
          "id": "9f787182-f5f8-4842-9c76-75a1fdb8c4d0",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "218f368e-1ef4-44e1-ba30-5e2af1baeca5",
          "attributes": {}
        },
        {
          "id": "2fa1ced2-207e-4a9a-990b-df131ea388fb",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "218f368e-1ef4-44e1-ba30-5e2af1baeca5",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "a28bd829-7f10-4327-95a2-be1f874348c7",
    "name": "default-roles-testing",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "2abf51e6-9e51-4f1b-928f-a19a9f28bcdc"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppMicrosoftAuthenticatorName",
    "totpAppGoogleName"
  ],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "users": [],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account",
          "view-groups"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "427d4309-f0a5-4072-8633-ebcc2cb432ca",
      "clientId": "Spring-resources-server",
      "name": "",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "weNhIHTeU0d0HPpm6v1RkRqPcMyGo64b",
      "redirectUris": [
        "/*"
      ],
      "webOrigins": [
        "/*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "client.secret.creation.time": "1681719402",
        "backchannel.logout.session.required": "true",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "218f368e-1ef4-44e1-ba30-5e2af1baeca5",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/Testing/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/Testing/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "06c70263-10ed-4040-9a8b-25e149fedf37",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/Testing/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/Testing/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "6ccafef5-04fc-4c47-93ae-487d50b82cac",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "0e1878d2-837f-4d2f-98a9-28f4860f1e10",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "e4d088b2-15c3-4118-a3d0-4ddd3cbc1bfd",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "485f7f03-1c9c-4552-ae4b-f29f1dd9f7a6",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "f49ea6ec-f593-48f1-8adf-7ffd3c962973",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/Testing/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/Testing/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "e4195762-99f0-428d-b491-1ef5ed60456f",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "f4d3789f-6950-4291-92a9-4d0c041703c9",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "16bf4e0a-3aa7-42e9-b1ca-329370d7d81f",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "584809c3-5d8d-423b-b93e-d375db7c0d53",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "e5f6988d-d9f1-4efd-a950-918f3df5b482",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "047fe306-8c1c-4311-bfc1-79e3ed330bcd",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "464063d3-08a8-4c54-9d30-c2fabdbd0fb3",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "9966aa4c-9510-49dc-a686-58ffddb30dbe",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "52ff41f5-460e-43b9-9a9d-eab0cab96175",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b9549f93-6e33-4716-9380-8ca5327b8266",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "1615a20e-f60d-4e88-8aa8-3d941595e80b",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "81f5274d-b05d-4a7d-b0ef-089bb4ca547b",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1ba90d8d-895b-4cb4-b69d-ab97b667cc1d",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "fe0792d7-2691-45c4-92ea-206ab6ac3bb9",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "98700ef7-6c9a-4f6a-9a3e-757e7941af50",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "90e79c85-f287-49cb-a38f-0b853dde361d",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "dcf06ecb-5c76-4820-9411-556b73b1edd0",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "e9ed00ae-f416-4530-a41e-050266f5a229",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "615422f5-520d-4ec9-b84b-a5cce9a59461",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "41eea486-d978-4efd-8039-7b2362207dd5",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "76c09cd6-2d11-447b-a5c3-616272ec3cb6",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "9075c3da-b1e8-4d33-9aaf-c26faa6f0309",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "78b67112-faf9-4bb4-9278-7d27d102afc1",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "885cc3d1-133c-491f-9e64-39700c9c073c",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "32b419ef-099d-40d7-8c27-95439d3f7b90",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "bbc5c51e-5abb-4885-a07c-7006220516bb",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a1039b9f-e1bb-4a70-95b0-c382f03f812a",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "fc1c4ce6-78ca-41d3-b32b-88daf6d241d1",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "daa4ab1b-f83c-457a-a9b3-d177e8938c7f",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "3e1fbddc-81c0-45b4-b9e6-aafb0c78f223",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "4e8308ea-040d-4216-b52c-4c22b923dd25",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "e88a25a9-dd34-46b2-a27c-0291e37085a3",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "a2b7cba4-668b-4d5d-81d8-6be014d3e4ba",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "7d731e22-9910-4fc6-9d67-84652900f1c8",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "cff42bd8-336a-4465-9d01-68780f4789a2",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "7b2dd3b9-c860-42b6-a0bf-7b09258dd396",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "069df250-c620-49c6-9d2a-653f8ceb77ab",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "b3795dc0-0fd6-46b8-8fa0-ebbf062464d2",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "d8ce16f3-186c-495c-b2df-e836d8156499",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "c006de5b-aa70-4840-b353-b59c69685032",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "30b3cb98-35e9-4513-9885-74302e682920",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "e0c76ec4-c6de-46d2-93a9-14e85e1f2e56",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "e18aab2f-8a1e-4e35-a6e9-9086ccfdbd4e",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-sha256-pairwise-sub-mapper",
            "saml-role-list-mapper",
            "saml-user-property-mapper",
            "oidc-full-name-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-address-mapper"
          ]
        }
      },
      {
        "id": "9ac2f158-cea5-411e-a8a2-04614fe94aa4",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "12c5d78d-6c98-40b3-a70c-e6d3657a2572",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "f15bf61f-6418-40bd-8007-3cc5f4c0aada",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-attribute-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-role-list-mapper",
            "oidc-full-name-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-address-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-property-mapper"
          ]
        }
      }
    ],
    "org.keycloak.storage.UserStorageProvider": [
      {
        "id": "4d4c831d-54d7-4f52-b925-133d8edb6ef6",
        "name": "Custom",
        "providerId": "custom-user-storage-provider",
        "subComponents": {},
        "config": {
          "api_key": [
            "03918417-a69a-4a49-95e1-48939efeefdb"
          ],
          "cachePolicy": [
            "DEFAULT"
          ],
          "url": [
            "http://user-service:8083/api/v1"
          ],
          "enabled": [
            "true"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "f765cfac-897a-4383-9223-080f484603e8",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "4a06818b-13a5-4e71-92bc-14d1fd44fa82"
          ],
          "secret": [
            "QELdh7MAlDnltBrAJswN8YtFd4XU-gtVbQxHnXZ435414lWtLnviwcmYFD4Ch3xAc3TJ4DYQGqtPtiC3P3B3tQ"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS256"
          ]
        }
      },
      {
        "id": "8196bad9-2fd1-47dc-9420-262908f98b82",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "6e14ce2a-def9-4b28-8267-06209c8786fa"
          ],
          "secret": [
            "m-Ew_yo7lrENMuUsarQrgw"
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "55b0a1ea-7e3f-455c-a012-15bbe4071995",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEA2ZFhub+96QYoCwa3iua+MAZ4WRIg8XNYucm/jg/Ot6h2C/2Xteyvmi/IBjqaMsMjDGmytoeid5/CFr26IQFCuNTas6jxD7Ry5fZVPZElbb+Pw9kBLetq9ti62VyGynXDskTUCzTDLYKHdGSgduhTVVzLRqqIxYok+3rFEDx+kj/gMmu1yl0eGbnhtgrqPt2SZ6eqZGt3QnXsvnTyw1lmtMePCSZuWXFjfzMZCyFmoKsVt/CkZloZEQqnFUaXuukwsljATAICP8O7q1bUShPAIGJG7VACABFbxvTlhebcyW+8ToxXDyCGD4+hP/q0eungJwU/hRqmGgjyqvlOOJbBEwIDAQABAoIBACR0wWjUEbjpsK0ET54FQwoeE21tZbq/prbe8OuXh35ryngA4rp3sgcGiaBNkof9/bH3Rhxixtz/lpCj8vvTz7/T3t+q59XHWVdiOu9Jknl811SsWI++ulopf8mrQOTM7eFBujw0d535GMRulhrGnCwaE++/5JIhL0g6TqoFUPolTcmwSEzPaWq7Aga01xSF6ZYhk7SufCK43V+MaEt5IhZINyZJdUJm3tkKEkSNOsGQEO1YzYeJgJb2T7KvFQJZw3/MnijtaVc04rniWRNAKvy2cciNupaf+cQw5+BsMe+EZBRxwPSJIQWPoeTE9HFLffZp36d3brwbea3wL9+IjqkCgYEA8YFDtBDUhA5eYho9hTw1EC+GuWDMbT9xIjJKolncK0gBD+sbTfFVWCVhgdgEjGEmtN/lBMp7ei8/pqTwaP9wAj1xhqcIl2hqd1kR2lGH8rFQvhnL4GNAXSz/R+ZBsitDpIHoulrQxwTenqJk1mysE62psOjmRCX9qLIDmyQbxpkCgYEA5qBSy8pZJR67PA6p0Fp2eoxxsqMVA27ZGjfT7HoB4yUDojmedPlXAYzfrO9nO9Yyq5KGG3UN89rWMA21gCOf7e2BOYnZZGSIOveMoGpxSpA+M0KD//EfXDHnEUcysk/KNy5a3pyxzntC3MVb7qvU45cMmRS5rPJlTSIevp1AzIsCgYEA1l9F98qQuf//K9nbDi+ZcpqdXmRcUgVkqVQ3B9H4K7sopjat8AvvE+VqnlVgBDQgpaGwqwYJgTX7rDLw7GMBzBs6cKpIaA3Zo8M+o6qHoJhg8b34SWAQvCS7Hdl4K21YB+kA6pq+hEsASZQhKm0gef9Hh6/U5l1KwrnxlX8B4NECgYBzobDBotvdY7Im44c7AxBiU2ZyVZgkl4Bcx98GswmdNKLExLTxG08HZPWFBKey9auEILwCqkbrnC5F+6mj7Li0F5/yFG6eClXPkuy8RYI2C2pUUyZRvjimBhM/s330r1LJJgHDmbcAuwaEIKP+X8MmtUZIvn51+zbVXKUjlz61DwKBgQCL8rZuCkxK8NkG8kJpTpfT/+KxH9EQ6wbpo9nbXKSlM2srbuxZ0MY6OgkcIzXnPf9YP3mkgxPNN9vHaHCSS3Szn++p11+9q60tQ/6dE0f568x+kJpk2Kjeek6Ku4Om+aSrSpFWhkKTQDh8ApgXAPzpuJLvecJoe6rSVtYCWGdJcw=="
          ],
          "keyUse": [
            "ENC"
          ],
          "certificate": [
            "MIICnTCCAYUCBgGHjkkVfDANBgkqhkiG9w0BAQsFADASMRAwDgYDVQQDDAdUZXN0aW5nMB4XDTIzMDQxNzA4MTQyN1oXDTMzMDQxNzA4MTYwN1owEjEQMA4GA1UEAwwHVGVzdGluZzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANmRYbm/vekGKAsGt4rmvjAGeFkSIPFzWLnJv44Pzreodgv9l7Xsr5ovyAY6mjLDIwxpsraHonefwha9uiEBQrjU2rOo8Q+0cuX2VT2RJW2/j8PZAS3ravbYutlchsp1w7JE1As0wy2Ch3RkoHboU1Vcy0aqiMWKJPt6xRA8fpI/4DJrtcpdHhm54bYK6j7dkmenqmRrd0J17L508sNZZrTHjwkmbllxY38zGQshZqCrFbfwpGZaGREKpxVGl7rpMLJYwEwCAj/Du6tW1EoTwCBiRu1QAgARW8b05YXm3MlvvE6MVw8ghg+PoT/6tHrp4CcFP4UaphoI8qr5TjiWwRMCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEABt+IXXJ4WQ06FfxG9Bn7i+OVM2g5TuIwvBhwRo9/DdlblHa3PWPdSNbTvFiC9Nqsa+xBjPHym4V+xA2K8lRaxB5kN8UVcBIFjKwD1rZIDomaG0acZpBzC9khytAWXyFs4qVDvW2m1Eh5nNF9ZRMFDJ0WmxszigvP/Gjy7ynPtk24XgTjcOLbmpCSPWlz4oC2/JsXCDr9YAcrM/s838yrCTyknDU5COIfzmUXZYDFpyJxRH1XOAfb9gucgg5laaUzMYl1ZwPyqYEH71uVPolyKyoM4juDztxUWHE0ODo/FBGwuTKr4RPESyDAfcZxY/mX1dMNXxG+dBtnZUerVnuJGw=="
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      },
      {
        "id": "074cdcd8-10c5-48a5-8a37-ce0860e49a2e",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEowIBAAKCAQEA0dvOhQP8o2Yv6DKxX7DH468N0y7oFT+ebNsVMiB2swRnOcKECg2rCQctkwBDZHFt0jInLgKksEfZ5u0XFNAykZQm9ko2Bxop1CfpFAq2EZFgK6MWl1sDxzovypTTkhOBV9SiHI+KyNnf5LLKdmWUQbRHBT4ew0T4UBp37mYE0XfjH4VOYDrtQsOEWD/X102s2oX7+36g1HtqAH0AVZeo/Ee+Z0zCywwD/XYE1pKIxWsQ90fQ0S7kI1U1TK7awORiFK8ldM9tr8MyKv1u7EcqhQIXF2EaosKMt7bqnI8ONKPtR13T+rm9efwNvY+9PXiYVs2M7bwKU02KulXriWkNhwIDAQABAoIBAAdA3X9RIcsfWI+M1P71iWslXUkhKWoL7rSyJnuQOK9mUGUO2T55tiF+ldorW6jzQgmjrHaq0Q4QuweAHANJpj3MN5kypnG8u0O3H2y5vreWZT23iivavE4yBNMv2AIyr2Py7al8DUl057KsD/24nr+zSfMfRbPtGddhmtHqxRwyRGcAp3Cexqty8hiEkDDJsPR1aiCKieNWGebm8k0bVAAnULn8ullSZy+73j4+uTxwgSBcYLDTErJOl1ypBJP5buQHa36stM3SpoMD283G4eH096P2LsTPo4eC33c3m4X25WoYPjwKGKgE3IYBZwSSRDdVcB13U0vLQw44nnq6KykCgYEA8HH8Y4DlWAG4gcRuvHSELbRWmayFgglyJKL2kW57c99HT9WXb2WGb1JOqHWyY0X8ERV2ySBmLrwO3wwh0lBc3AfnpwyAHUyggscykMlGaofa4eCyi0anxv3GwA0TuFg99c46ETjLQkMC9rdfKHY80W21H0egXz670IVOXYg5pT8CgYEA329Ghu9u+pXKvJFxwSQAUdTnWHGEuMqff65i54XAS2X5a21Sgwb0mWGEhrpQCM+cLf0vTGGkndDC78/7VBX29CtfGh0rTVBN/SnskSOCYUy26l4M3Vdsw8AbywOdwl3xSpj0aFTou6iSJXyGnxDP+9jhCZWFMhB+fnYWkCtXnbkCgYAj5WCAmmWi1d7twJ2nlN2G1T14g8EKwM5BmfKlk5Dqo5LJ4GFTSBzh0a/chnWzTGdtRX8OV7/pijnOIsmJ1GWIk8WJstwNg7sSyxpJc0MH9HBA+IKvOEUj+A8L7OfcxY+6eqdAmvH9WnO+0XFrYPuDaJV5rf/LOFphrwUcAZJZkQKBgE/siwrrjQRAHtRTJqDTEvYytUqS2MoNWP6gT6rH0mBmKtE9ut052LchBfn3nXd5ZEGjJo8pAmydZ43HFP0gGkV/WjaKJpoyVqNvorrMO/A4M9okKG/ovPRMvORi98S2PADWM986OEIga57TK4isx+krzFvUS1/8PHNaJHoPtvipAoGBALG/eBwJfphEqffFNrHxZBbIgoB76Mwll32kUkv+4PaSbj9AtI+dn8p5HX9ZDbFpj/rAb+WGViDXNtceNboTRdTP7jXOETvp3CTdp/KgfiP0Z02mgXdtJWF0b9eAqvxerNvWDYnh8S1fq8edkkhJfQXrgjBHwoZcix2BcvfFFRIQ"
          ],
          "keyUse": [
            "SIG"
          ],
          "certificate": [
            "MIICnTCCAYUCBgGHjkkURDANBgkqhkiG9w0BAQsFADASMRAwDgYDVQQDDAdUZXN0aW5nMB4XDTIzMDQxNzA4MTQyNloXDTMzMDQxNzA4MTYwNlowEjEQMA4GA1UEAwwHVGVzdGluZzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANHbzoUD/KNmL+gysV+wx+OvDdMu6BU/nmzbFTIgdrMEZznChAoNqwkHLZMAQ2RxbdIyJy4CpLBH2ebtFxTQMpGUJvZKNgcaKdQn6RQKthGRYCujFpdbA8c6L8qU05ITgVfUohyPisjZ3+SyynZllEG0RwU+HsNE+FAad+5mBNF34x+FTmA67ULDhFg/19dNrNqF+/t+oNR7agB9AFWXqPxHvmdMwssMA/12BNaSiMVrEPdH0NEu5CNVNUyu2sDkYhSvJXTPba/DMir9buxHKoUCFxdhGqLCjLe26pyPDjSj7Udd0/q5vXn8Db2PvT14mFbNjO28ClNNirpV64lpDYcCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAAthLH4iHgi/+omPDFldyKsgihUV/4uxDlsi2jvzcNMRngBOLhgmFGVW/AKk3r8ANMxfRqPd6NKmx6Q/oqEjM6DJLjmSNiOEZUOm4bHTop36n/bVbeKSEpCOVGhjZyLZOWMpNZNz37lNk3y4D1bqCk2P9EQzJeYolhDzDnBVuh0K7C+27xjys31MX6eu4UT4EhVpUNX4k9k5DeMmlVEdkAGy+K6wmTnJahCT8TnSRwPQjWDuw8SMo6TIX8UwSecOAOJi4hqgFk8Ai0z4FHRwSt9277EkJGY5KA0Lo+dWr/2Z1TZ83SsM4YhzsJnp6z/UmvKNrq6RhBXLZBx1xcIDfiA=="
          ],
          "priority": [
            "100"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "929f4932-1f95-40be-973e-fb0d875b8e09",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f142ea13-45ff-4d12-a10e-3033a4886a72",
      "alias": "Authentication Options",
      "description": "Authentication options.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "basic-auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "basic-auth-otp",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "53a4c58d-9cdd-4e97-a485-52e55f5a2b9c",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "2eb1feba-410b-4274-8200-07cfb01a7901",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6f9577cd-c438-4616-97d5-66b46a880707",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f1c10ab8-882f-4b5e-8302-9cf3b5d3d60d",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "845d7888-d4c9-4057-8032-1240c83fd213",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "44f4e936-0b33-4671-b5f8-be4f2c9981f6",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "34012c29-a596-447a-ad30-9292a9b05144",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "21be7567-e342-40fe-b578-02c25ae5dfdc",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "1f97d357-5900-4bee-81f1-1e549d6cdbad",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "3a80d01e-1081-4f26-b52b-b3235bcf68bd",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "310aac38-fae4-4682-8a38-ba8dd15ba14d",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "bc5fd48b-24a6-4305-b0c5-c181917b2763",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9e9de39f-658f-4d1a-98e9-d203da9a65c9",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a60acf28-d7ab-47cd-a8e4-f02a59f99c31",
      "alias": "http challenge",
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "no-cookie-redirect",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Authentication Options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "2501d8e4-9d3f-4842-a404-911de90d9080",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "923e914e-e4d7-43be-89bc-8c05dbcd86ec",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f50b91cb-6400-4d49-ad44-01947f0b1d26",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "88dd026c-eeeb-443e-86fe-d033038dd2ed",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "b947930f-f6a1-485c-abf1-c76b0446cda7",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "9d0a3839-a8d8-4bd9-9b37-e858a3e3666f",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "oauth2DevicePollingInterval": "5",
    "parRequestUriLifespan": "60",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false",
    "frontendUrl": "http://localhost:8081/auth"
  },
  "keycloakVersion": "21.0.2",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}